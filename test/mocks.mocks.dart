// Mocks generated by Mockito 5.4.6 from annotations
// in fujitake_app_new/test/mocks.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:fujitake_app_new/models/favorite_website_model.dart' as _i6;
import 'package:fujitake_app_new/models/prompt_model.dart' as _i7;
import 'package:fujitake_app_new/models/user_profile_model.dart' as _i4;
import 'package:fujitake_app_new/services/firestore_service.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i5;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [FirestoreService].
///
/// See the documentation for Mockito's code generation for more information.
class MockFirestoreService extends _i1.Mock implements _i2.FirestoreService {
  MockFirestoreService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<void> initializeUserId() =>
      (super.noSuchMethod(
            Invocation.method(#initializeUserId, []),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  _i3.Future<void> saveUserProfile(_i4.UserProfile? profile) =>
      (super.noSuchMethod(
            Invocation.method(#saveUserProfile, [profile]),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  _i3.Future<_i4.UserProfile?> getUserProfile(String? userId) =>
      (super.noSuchMethod(
            Invocation.method(#getUserProfile, [userId]),
            returnValue: _i3.Future<_i4.UserProfile?>.value(),
          )
          as _i3.Future<_i4.UserProfile?>);

  @override
  _i3.Stream<_i4.UserProfile?> getCurrentUserProfileStream() =>
      (super.noSuchMethod(
            Invocation.method(#getCurrentUserProfileStream, []),
            returnValue: _i3.Stream<_i4.UserProfile?>.empty(),
          )
          as _i3.Stream<_i4.UserProfile?>);

  @override
  _i3.Future<void> updateFatherModeStatus(String? userId, bool? status) =>
      (super.noSuchMethod(
            Invocation.method(#updateFatherModeStatus, [userId, status]),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  _i3.Future<String> uploadProfileImage(String? filePath, String? userId) =>
      (super.noSuchMethod(
            Invocation.method(#uploadProfileImage, [filePath, userId]),
            returnValue: _i3.Future<String>.value(
              _i5.dummyValue<String>(
                this,
                Invocation.method(#uploadProfileImage, [filePath, userId]),
              ),
            ),
          )
          as _i3.Future<String>);

  @override
  _i3.Future<void> saveFavoriteWebsite(_i6.FavoriteWebsite? website) =>
      (super.noSuchMethod(
            Invocation.method(#saveFavoriteWebsite, [website]),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  _i3.Future<void> deleteFavoriteWebsite(String? websiteId) =>
      (super.noSuchMethod(
            Invocation.method(#deleteFavoriteWebsite, [websiteId]),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  _i3.Stream<List<_i6.FavoriteWebsite>> getFavoriteWebsites() =>
      (super.noSuchMethod(
            Invocation.method(#getFavoriteWebsites, []),
            returnValue: _i3.Stream<List<_i6.FavoriteWebsite>>.empty(),
          )
          as _i3.Stream<List<_i6.FavoriteWebsite>>);

  @override
  _i3.Future<String> uploadImage(String? filePath, String? fileName) =>
      (super.noSuchMethod(
            Invocation.method(#uploadImage, [filePath, fileName]),
            returnValue: _i3.Future<String>.value(
              _i5.dummyValue<String>(
                this,
                Invocation.method(#uploadImage, [filePath, fileName]),
              ),
            ),
          )
          as _i3.Future<String>);

  @override
  _i3.Future<void> deleteImage(String? imageUrl) =>
      (super.noSuchMethod(
            Invocation.method(#deleteImage, [imageUrl]),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  _i3.Future<void> savePrompt(_i7.Prompt? prompt) =>
      (super.noSuchMethod(
            Invocation.method(#savePrompt, [prompt]),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  _i3.Future<void> deletePrompt(String? promptId) =>
      (super.noSuchMethod(
            Invocation.method(#deletePrompt, [promptId]),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  _i3.Stream<List<_i7.Prompt>> getPrompts() =>
      (super.noSuchMethod(
            Invocation.method(#getPrompts, []),
            returnValue: _i3.Stream<List<_i7.Prompt>>.empty(),
          )
          as _i3.Stream<List<_i7.Prompt>>);
}
